{
  "name": "johnny-five",
  "description": "The JavaScript Hardware Programming Framework. Use with: Arduino (all models), Electric Imp, Beagle Bone, Intel Galileo & Edison, Linino One, Pinoccio, Raspberry Pi, Spark Core, TI Launchpad and more!",
  "version": "0.8.40",
  "homepage": "https://github.com/rwldrn/johnny-five",
  "author": {
    "name": "Rick Waldron",
    "email": "waldron.rick@gmail.com"
  },
  "contributors": [
    {
      "name": "Adam Hyland",
      "email": "<protonk@gmail.com"
    },
    {
      "name": "Andreas Haugstrup Pedersen",
      "email": "<haugstrup@podio.com"
    },
    {
      "name": "Andrew Homeyer",
      "email": "<homeyer@gmail.com"
    },
    {
      "name": "Ben Gillies",
      "email": "<bengillies@gmail.com"
    },
    {
      "name": "Carl Danley",
      "email": "<carldanley@gmail.com"
    },
    {
      "name": "Chris Williams",
      "email": "<chris@saferaging.com"
    },
    {
      "name": "Colin Vernon",
      "email": "<colin@littlebits.cc"
    },
    {
      "name": "Corey Daniels",
      "email": "<corey@skookum.com"
    },
    {
      "name": "FotoVerite",
      "email": "<mzbphoto@gmail.com"
    },
    {
      "name": "Francis Gulotta",
      "email": "<wizard@roborooter.com"
    },
    {
      "name": "Irene Ros",
      "email": "<irene@bocoup.com"
    },
    {
      "name": "Jonathan Beri",
      "email": "<jmberi@gmail.com"
    },
    {
      "name": "Julian Gautier",
      "email": "<julian.gautier@alumni.neumont.edu"
    },
    {
      "name": "Linus Larsson",
      "email": "<linus@devshm.net"
    },
    {
      "name": "Mike Breen",
      "email": "<hardbap@gmail.com"
    },
    {
      "name": "Mike Harsch",
      "email": "<mike@harschsystems.com"
    },
    {
      "name": "Mike Sherov",
      "email": "<mike.sherov@gmail.com"
    },
    {
      "name": "Paul Tagliamonte",
      "email": "<paultag@sunlightfoundation.com"
    },
    {
      "name": "Rahul Ravikumar",
      "email": "<rahulrav@a2z.com"
    },
    {
      "name": "Randall A. Gordon",
      "email": "<randall@randallagordon.com"
    },
    {
      "name": "Rebecca Murphey",
      "email": "<rmurphey@gmail.com"
    },
    {
      "name": "Ryan Neufeld",
      "email": "<ryan@neucode.org"
    },
    {
      "name": "Scott González",
      "email": "<scott.gonzalez@gmail.com"
    },
    {
      "name": "Swift",
      "email": "<theycallmeswift@gmail.com"
    },
    {
      "name": "Travis Thieman",
      "email": "<travis.thieman@gmail.com"
    },
    {
      "name": "Vincent Agnano",
      "email": "<vincent.agnano@scopyleft.fr"
    },
    {
      "name": "Cole",
      "email": "<mcg42387@gmail.com"
    },
    {
      "name": "Divan Visagie",
      "email": "<visagiedivan@gmail.com"
    },
    {
      "name": "Sara Gorecki",
      "email": "<sgorecki@gmail.com"
    },
    {
      "name": "Raquel Velez",
      "email": "<rockbot01@gmail.com"
    },
    {
      "name": "Tim Walker",
      "email": "<tim.twalker@gmail.com"
    },
    {
      "name": "Toby Miller",
      "email": "<tmiller@localhost.localhost"
    },
    {
      "name": "Richard Key",
      "email": "<rich@busyrich.com"
    },
    {
      "name": "Patrick Clark",
      "email": "<pat@hellop.at"
    },
    {
      "name": "Boros Márton",
      "email": "<martonboros@gmail.com"
    },
    {
      "name": "Jeremy Morrell",
      "email": "<morrell.jeremy@gmail.com"
    },
    {
      "name": "Bob Holt",
      "email": "<bobholt@gmail.com"
    },
    {
      "name": "Dwayn Matthies",
      "email": "<dwayn.matthies@gmail.com"
    },
    {
      "name": "AJ Fisher",
      "email": "<ajfisher.td@gmail.com"
    },
    {
      "name": "Julian Duque",
      "email": "<julianduquej@gmail.com"
    },
    {
      "name": "Daan van Berkel",
      "email": "<daan.v.berkel.1980@gmail.com"
    },
    {
      "name": "Oli Evans",
      "email": "<oli@zilla.org.uk"
    },
    {
      "name": "Cory Gackenheimer",
      "email": "<cory.gack@gmail.com"
    },
    {
      "name": "Ray Pierce",
      "email": "<ray@digitalpierce.com"
    },
    {
      "name": "Jonathan Clem",
      "email": "<jonathan@jclem.net"
    },
    {
      "name": "achingbrain",
      "email": "<alex@achingbrain.net"
    },
    {
      "name": "Jeff Albrecht",
      "email": "<jeffa@iea-software.com"
    },
    {
      "name": "Isaac Durazo",
      "email": "<isaacdurazo@gmail.com"
    },
    {
      "name": "Pawel Szymczykowski",
      "email": "<makenai@gmail.com"
    },
    {
      "name": "Alex Crooks",
      "email": "<alexcrooks@gmail.com"
    },
    {
      "name": "Donovan Buck",
      "email": "<donovan@donovan.bz"
    },
    {
      "name": "Taha Hesham",
      "email": "<taha@wizylabs.com"
    },
    {
      "name": "Alfonso de la Osa",
      "email": "<fonz@botverse.com"
    },
    {
      "name": "Donald Averill",
      "email": "<donaldaverill@nakedcitybrewing.com"
    },
    {
      "name": "Bryan Hughes",
      "email": "<bryan@theoreticalideations.com"
    },
    {
      "name": "Robert Myers",
      "email": "<rmyers@euro-pro.com"
    },
    {
      "name": "David Resseguie",
      "email": "<david@resseguie.com"
    },
    {
      "name": "Lyza Danger Gardner",
      "email": "<lyza@lyza.com"
    },
    {
      "name": "Adam Magaluk",
      "email": "<AdamMagaluK@gmail.com"
    },
    {
      "name": "Udo Kramer",
      "email": "<optikfluffel@gmail.com"
    },
    {
      "name": "Joseph Weakley",
      "email": "<joew@samjoe.com"
    },
    {
      "name": "Dean McDonnell",
      "email": "<mcdonnelldean@outlook.com"
    },
    {
      "name": "Jonathan Petitcolas",
      "email": "<petitcolas.jonathan@gmail.com"
    },
    {
      "name": "Chinmay Pendharkar",
      "email": "<notthetup@gmail.com"
    },
    {
      "name": "Brian Genisio",
      "email": "<BrianGenisio@Gmail.com"
    },
    {
      "name": "Anna Gerber",
      "email": "<anna.m.gerber@gmail.com"
    },
    {
      "name": "Derek Wheelden",
      "email": "<derek.wheelden@gmail.com"
    },
    {
      "name": "Sean Hussey",
      "email": "<sean@seanhussey.com"
    },
    {
      "name": "ralphtheninja",
      "email": "<ralphtheninja@riseup.net"
    },
    {
      "name": "SotirisValogiannis",
      "email": "<omiloparmenos@gmail.com"
    },
    {
      "name": "Sue Lockwood",
      "email": "<deathbearbrown@gmail.com"
    },
    {
      "name": "Henri Cavalcante",
      "email": "<contato@henrimichel.com.br"
    },
    {
      "name": "Dany Shaanan",
      "email": "<danyshaanan@gmail.com"
    }
  ],
  "keywords": [
    "arduino",
    "raspberrypi",
    "usb",
    "serial",
    "serialport",
    "firmata",
    "robot",
    "spark",
    "spark core",
    "spark-io",
    "raspberrypi",
    "raspberry pi",
    "rpi",
    "raspi-io",
    "intel galileo",
    "galileo",
    "galileo-io"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/rwldrn/johnny-five.git"
  },
  "bugs": {
    "url": "https://github.com/rwldrn/johnny-five/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/rwldrn/johnny-five/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/johnny-five",
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "color-convert": "~0.5.2",
    "colors": ">=0.5.1",
    "descriptor": "latest",
    "ease-component": "latest",
    "es6-shim": "latest",
    "lodash": "latest",
    "nanotimer": "0.3.1",
    "temporal": "latest",
    "array-includes": "latest",
    "firmata": ">=0.2.9",
    "serialport": "latest",
    "galileo-io": "latest"
  },
  "optionalDependencies": {
    "firmata": ">=0.2.9",
    "serialport": "latest",
    "galileo-io": "latest"
  },
  "devDependencies": {
    "async": "~0.9.0",
    "copy-paste": "~0.3.0",
    "grunt": "~0.4.5",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-nodeunit": "~0.4.1",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-jsbeautifier": "~0.2.2",
    "grunt-jscs": "~0.8.0",
    "keypress": "latest",
    "optimist": "~0.6.1",
    "shelljs": "^0.3.0",
    "sinon": "~1.10.2"
  },
  "scripts": {
    "test": "grunt"
  },
  "browser": {
    "galileo-io": false
  },
  "readme": "<!-- \n\n    Hello!\n\n    Please don't edit this file!\n\n    If you'd like to make changes to the readme contents, please make them in the tpl/.readme.md file. If you'd like to add an example, please put the fil in eg/ and then add an entry to programs.json. To generate the markdown and update the main readme, run: \n\n    `grunt examples`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-->\n<img src=\"https://github.com/rwldrn/johnny-five/raw/master/assets/sgier-johnny-five.png\">\n\n# Node-isassemble Johnny-Five\n\n_Artwork by [Mike Sgier](http://msgierillustration.com)_\n\n[![Build Status](https://travis-ci.org/rwaldron/johnny-five.svg?branch=master)](https://travis-ci.org/rwaldron/johnny-five) [![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/rwaldron/johnny-five?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\n#### Johnny-Five is an Open Source, Firmata Protocol based, IoT and Robotics programming framework, developed at [Bocoup](http://bocoup.com). Johnny-Five programs can be written for Arduino (all models), Electric Imp, Beagle Bone, Intel Galileo & Edison, Linino One, Pinoccio, Raspberry Pi, Spark Core, TI Launchpad and more!\n\nJohnny-Five does not attempt to provide \"all the things\", but instead focuses on delivering robust, reality tested, highly composable APIs that behave consistently across all supported hardware platforms. Johnny-Five wants to be a baseline control kit for hardware projects, allowing you the freedom to build, grow and experiment with diverse JavaScript libraries of your own choice. Johnny-Five couples comfortably with: \n\n- Popular application libraries such as [Express.js](http://expressjs.com/) and [Socket.io](http://socket.io/).\n- Fellow hardware projects like [ar-drone](https://github.com/felixge/node-ar-drone), [Aerogel](https://github.com/ceejbot/aerogel) and [Spheron](https://github.com/alchemycs/spheron)\n- Bluetooth game controllers like [XBox Controller](https://github.com/andrew/node-xbox-controller) and [DualShock](https://github.com/rdepena/node-dualshock-controller)\n- IoT frameworks, such as [Octoblu](http://www.octoblu.com/)\n\n...And that's only a few of the many explorable possibilities. Check out these exciting projects: [node-pulsesensor](https://www.npmjs.org/package/node-pulsesensor), [footballbot-workshop-ui](https://www.npmjs.org/package/footballbot-workshop-ui), [nodebotui](https://www.npmjs.org/package/nodebotui), [dublin-disco](https://www.npmjs.org/package/dublin-disco), [node-slot-car-bot](https://www.npmjs.org/package/node-slot-car-bot), [servo-calibrator](https://www.npmjs.org/package/servo-calibrator), [node-ardx](https://www.npmjs.org/package/node-ardx), [nodebot-workshop](https://www.npmjs.org/package/nodebot-workshop), [phone-home](https://www.npmjs.org/package/phone-home), [purple-unicorn](https://www.npmjs.org/package/purple-unicorn), [webduino](https://www.npmjs.org/package/webduino), [leapduino](https://www.npmjs.org/package/leapduino), [lasercat-workshop](https://www.npmjs.org/package/lasercat-workshop), [simplesense](https://www.npmjs.org/package/simplesense), [five-redbot](https://www.npmjs.org/package/five-redbot), [robotnik](https://www.npmjs.org/package/robotnik), [the-blender](https://www.npmjs.org/package/the-blender)\n\n## Supported Hardware\n\nJohnny-Five has been tested on a variety of Arduino-compatible [Boards](https://github.com/rwaldron/johnny-five/wiki/Board).\n\nFor non-Arduino based projects, a number of platform-specific [IO Plugins](https://github.com/rwaldron/johnny-five/wiki/IO-Plugins) are available. IO Plugins allow Johnny-Five code to communicate with any non-Arduino based hardware in whatever language that platforms speaks!\n\n\n#### Why JavaScript? [NodeBots: The Rise of JavaScript Robotics](http://www.voodootikigod.com/nodebots-the-rise-of-js-robotics)\n\n\n## Supported Hardware\n\nJohnny-Five has been tested on a variety of Arduino-compatible [Boards](https://github.com/rwaldron/johnny-five/wiki/Board).\n\nFor non-Arduino based projects, platform-specific [IO Plugins](https://github.com/rwaldron/johnny-five/wiki/IO-Plugins#available-io-plugins) are available. IO Plugins allow Johnny-Five code to communicate with any hardware in whatever language that platforms speaks! \n\n\n## Documentation\n\nDocumentation for the Johnny-Five API can be found [here](https://github.com/rwaldron/johnny-five/wiki) and [example programs here](https://github.com/rwaldron/johnny-five#example-programs). \n\n## Guidance\n\nNeed help? Ask a question on the [NodeBots Community Forum](http://forums.nodebots.io). If you just have a quick question or are interested in ongoing design discussions, join us in the [Johnny-Five Gitter Chat](https://gitter.im/rwaldron/johnny-five).\n\nFor step-by-step examples, including an electronics primer, check out [Arduino Experimenter's Guide for NodeJS](http://node-ardx.org/) by [@AnnaGerber](https://twitter.com/AnnaGerber)\n\nHere is a list of [prerequisites](https://github.com/rwaldron/johnny-five/wiki/Prerequites) for Linux, OSX or Windows.\n\nCheck out the [bluetooth guide](https://github.com/rwaldron/johnny-five/wiki/JY-MCU-Bluetooth-Serial-Port-Module-Notes) if you want to remotely control your robot.\n\n## Setup and Assemble Arduino\n\n- Recommended Starting Kit: [Sparkfun Inventor's Kit](https://www.sparkfun.com/products/12001)\n- Download [Arduino IDE](http://arduino.cc/en/main/software)\n- Plug in your Arduino or Arduino compatible microcontroller via USB\n- Open the Arduino IDE, select: File > Examples > Firmata > StandardFirmata\n- Click the \"Upload\" button.\n\nIf the upload was successful, the board is now prepared and you can close the Arduino IDE.\n\nFor non-Arduino projects, each IO Plugin's repo will provide its own platform specific setup instructions.\n\n\n## Hey you, here's Johnny!\n\n#### Source Code:\n\n``` bash\ngit clone git://github.com/rwldrn/johnny-five.git && cd johnny-five\n\nnpm install\n```\n\n#### npm package:\n\nInstall the module with:\n\n```bash\nnpm install johnny-five\n```\n\n\n## Johnny-Five is...\n\n```javascript\nvar five = require(\"johnny-five\"),\n    // or \"./lib/johnny-five\" when running from the source\n    board = new five.Board();\n\nboard.on(\"ready\", function() {\n\n  // Create an Led on pin 13 and strobe it on/off\n  // Optionally set the speed; defaults to 100ms\n  (new five.Led(13)).strobe();\n\n});\n```\n[Watch it here!](http://jsfiddle.net/rwaldron/dtudh/show/light)\n\n> Note: Node will crash if you try to run johnny-five in the node REPL, but board instances will create their own contextual REPL. Put your script in a file.\n\n\n\n## Many fragments. Some large, some small.\n\n#### [Wireless Nodebot](http://jsfiddle.net/rwaldron/88M6b/show/light) NEW!\n#### [Kinect Controlled Robot Arm](http://jsfiddle.net/rwaldron/XMsGQ/show/light/) NEW!\n#### [Biped Nodebot](http://jsfiddle.net/rwaldron/WZkn5/show/light/)\n#### [LCD Running Man](http://jsfiddle.net/rwaldron/xKwaU/show/light/)\n#### [Slider Controlled Panning Servo](http://jsfiddle.net/rwaldron/kZakv/show/light/)\n#### [Joystick Controlled Laser (pan/tilt) 1](http://jsfiddle.net/rwaldron/HPqms/show/light/)\n#### [Joystick Controlled Laser (pan/tilt) 2](http://jsfiddle.net/rwaldron/YHb7A/show/light/)\n#### [Joystick Controlled Claw](http://jsfiddle.net/rwaldron/6ZXFe/show/light/)\n#### [Robot Claw](http://jsfiddle.net/rwaldron/CFSZJ/show/light/)\n#### [Joystick, Motor & Led](http://jsfiddle.net/rwaldron/gADSz/show/light/)\n\n\n## Example Programs\n<!--extract-start:examples-->\n\n### Board\n- [Board](https://github.com/rwaldron/johnny-five/blob/master/docs/board.md)\n- [Board With Port](https://github.com/rwaldron/johnny-five/blob/master/docs/board-with-port.md)\n- [Board Multi](https://github.com/rwaldron/johnny-five/blob/master/docs/board-multi.md)\n- [Repl](https://github.com/rwaldron/johnny-five/blob/master/docs/repl.md)\n- [Pin](https://github.com/rwaldron/johnny-five/blob/master/docs/pin.md)\n\n### LED\n- [Led](https://github.com/rwaldron/johnny-five/blob/master/docs/led.md)\n- [Led Blink](https://github.com/rwaldron/johnny-five/blob/master/docs/led-blink.md)\n- [Led Pulse](https://github.com/rwaldron/johnny-five/blob/master/docs/led-pulse.md)\n- [Led Fade](https://github.com/rwaldron/johnny-five/blob/master/docs/led-fade.md)\n- [Led Fade Callback](https://github.com/rwaldron/johnny-five/blob/master/docs/led-fade-callback.md)\n- [Led Status](https://github.com/rwaldron/johnny-five/blob/master/docs/led-status.md)\n- [Led Array](https://github.com/rwaldron/johnny-five/blob/master/docs/led-array.md)\n- [Led Rgb](https://github.com/rwaldron/johnny-five/blob/master/docs/led-rgb.md)\n- [Led Rgb Anode](https://github.com/rwaldron/johnny-five/blob/master/docs/led-rgb-anode.md)\n- [Led Rgb PCA9685](https://github.com/rwaldron/johnny-five/blob/master/docs/led-rgb-PCA9685.md)\n- [Led Rainbow](https://github.com/rwaldron/johnny-five/blob/master/docs/led-rainbow.md)\n- [Led Demo Sequence](https://github.com/rwaldron/johnny-five/blob/master/docs/led-demo-sequence.md)\n- [Led Digits Clock](https://github.com/rwaldron/johnny-five/blob/master/docs/led-digits-clock.md)\n- [Led Matrix](https://github.com/rwaldron/johnny-five/blob/master/docs/led-matrix.md)\n- [Led Matrix Tutorial](https://github.com/rwaldron/johnny-five/blob/master/docs/led-matrix-tutorial.md)\n- [Led Matrix HT16K33](https://github.com/rwaldron/johnny-five/blob/master/docs/led-matrix-HT16K33.md)\n- [Led Matrix HT16K33 16x8](https://github.com/rwaldron/johnny-five/blob/master/docs/led-matrix-HT16K33-16x8.md)\n- [Laser Trip Wire](https://github.com/rwaldron/johnny-five/blob/master/docs/laser-trip-wire.md)\n\n### Servo\n- [Servo](https://github.com/rwaldron/johnny-five/blob/master/docs/servo.md)\n- [Servo Continuous](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-continuous.md)\n- [Servo Slider](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-slider.md)\n- [Servo Prompt](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-prompt.md)\n- [Servo Drive](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-drive.md)\n- [Servo Animation](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-animation.md)\n- [Servo Array](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-array.md)\n- [Servo PCA9685](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-PCA9685.md)\n\n### Servo Animation\n- [Animation](https://github.com/rwaldron/johnny-five/blob/master/docs/animation.md)\n- [Phoenix](https://github.com/rwaldron/johnny-five/blob/master/docs/phoenix.md)\n\n### Motor\n- [Motor](https://github.com/rwaldron/johnny-five/blob/master/docs/motor.md)\n- [Motor Directional](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-directional.md)\n- [Motor Brake](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-brake.md)\n- [Motor Current](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-current.md)\n- [Motor Hbridge](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-hbridge.md)\n- [Motor PCA9685](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-PCA9685.md)\n- [Motor 3 Pin](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-3-pin.md)\n- [Motobot](https://github.com/rwaldron/johnny-five/blob/master/docs/motobot.md)\n\n### Stepper Motor\n- [Stepper Driver](https://github.com/rwaldron/johnny-five/blob/master/docs/stepper-driver.md)\n- [Stepper Sweep](https://github.com/rwaldron/johnny-five/blob/master/docs/stepper-sweep.md)\n\n### ESC & Brushless Motor\n- [Esc Keypress](https://github.com/rwaldron/johnny-five/blob/master/docs/esc-keypress.md)\n\n### Sonar/Ultrasonic\n- [Ping](https://github.com/rwaldron/johnny-five/blob/master/docs/ping.md)\n- [Sonar Scan](https://github.com/rwaldron/johnny-five/blob/master/docs/sonar-scan.md)\n- [Sonar](https://github.com/rwaldron/johnny-five/blob/master/docs/sonar.md)\n- [Sonar I2c](https://github.com/rwaldron/johnny-five/blob/master/docs/sonar-i2c.md)\n\n### Button\n- [Button](https://github.com/rwaldron/johnny-five/blob/master/docs/button.md)\n- [Button Bumper](https://github.com/rwaldron/johnny-five/blob/master/docs/button-bumper.md)\n- [Button Options](https://github.com/rwaldron/johnny-five/blob/master/docs/button-options.md)\n- [Button Pullup](https://github.com/rwaldron/johnny-five/blob/master/docs/button-pullup.md)\n\n### Relay\n- [Relay Lamp Controller](https://github.com/rwaldron/johnny-five/blob/master/docs/relay-lamp-controller.md)\n\n### Shift Register\n- [Shift Register](https://github.com/rwaldron/johnny-five/blob/master/docs/shift-register.md)\n- [Shift Register Seven Segment](https://github.com/rwaldron/johnny-five/blob/master/docs/shift-register-seven-segment.md)\n\n### Infrared (Proximity, Motion, Reflectance)\n- [Ir Distance](https://github.com/rwaldron/johnny-five/blob/master/docs/ir-distance.md)\n- [Ir Motion](https://github.com/rwaldron/johnny-five/blob/master/docs/ir-motion.md)\n- [Ir Proximity](https://github.com/rwaldron/johnny-five/blob/master/docs/ir-proximity.md)\n- [Proximity](https://github.com/rwaldron/johnny-five/blob/master/docs/proximity.md)\n- [Ir Reflect](https://github.com/rwaldron/johnny-five/blob/master/docs/ir-reflect.md)\n- [Ir Reflect Array](https://github.com/rwaldron/johnny-five/blob/master/docs/ir-reflect-array.md)\n\n### Joystick\n- [Joystick](https://github.com/rwaldron/johnny-five/blob/master/docs/joystick.md)\n- [Joystick Claw](https://github.com/rwaldron/johnny-five/blob/master/docs/joystick-claw.md)\n- [Joystick Laser](https://github.com/rwaldron/johnny-five/blob/master/docs/joystick-laser.md)\n- [Joystick Motor Led](https://github.com/rwaldron/johnny-five/blob/master/docs/joystick-motor-led.md)\n\n### LCD\n- [Lcd](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd.md)\n- [Lcd Enumeratechars](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-enumeratechars.md)\n- [Lcd Runner 20x4](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-runner-20x4.md)\n- [Lcd Runner](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-runner.md)\n- [Lcd Runner](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-runner.md)\n- [Lcd I2c](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-i2c.md)\n- [Lcd I2c Runner](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-i2c-runner.md)\n\n### Magnetometer (Compass)\n- [Magnetometer Log](https://github.com/rwaldron/johnny-five/blob/master/docs/magnetometer-log.md)\n- [Magnetometer North](https://github.com/rwaldron/johnny-five/blob/master/docs/magnetometer-north.md)\n- [Magnetometer](https://github.com/rwaldron/johnny-five/blob/master/docs/magnetometer.md)\n\n### Piezo\n- [Piezo](https://github.com/rwaldron/johnny-five/blob/master/docs/piezo.md)\n\n### IMU\n- [Imu Mpu6050](https://github.com/rwaldron/johnny-five/blob/master/docs/imu-mpu6050.md)\n\n### Sensors\n- [Accelerometer](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer.md)\n- [Accelerometer Adxl345](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-adxl345.md)\n- [Accelerometer Adxl335](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-adxl335.md)\n- [Accelerometer Mma7361](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-mma7361.md)\n- [Accelerometer Mpu6050](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-mpu6050.md)\n- [Accelerometer Pan Tilt](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-pan-tilt.md)\n- [Gyro](https://github.com/rwaldron/johnny-five/blob/master/docs/gyro.md)\n- [Gyro Mpu6050](https://github.com/rwaldron/johnny-five/blob/master/docs/gyro-mpu6050.md)\n- [Photoresistor](https://github.com/rwaldron/johnny-five/blob/master/docs/photoresistor.md)\n- [Photoresistor Servo](https://github.com/rwaldron/johnny-five/blob/master/docs/photoresistor-servo.md)\n- [Potentiometer](https://github.com/rwaldron/johnny-five/blob/master/docs/potentiometer.md)\n- [Sensor](https://github.com/rwaldron/johnny-five/blob/master/docs/sensor.md)\n- [Sensor Fsr Servo](https://github.com/rwaldron/johnny-five/blob/master/docs/sensor-fsr-servo.md)\n- [Sensor Fsr](https://github.com/rwaldron/johnny-five/blob/master/docs/sensor-fsr.md)\n- [Sensor Ir Led Receiver](https://github.com/rwaldron/johnny-five/blob/master/docs/sensor-ir-led-receiver.md)\n- [Sensor Slider](https://github.com/rwaldron/johnny-five/blob/master/docs/sensor-slider.md)\n- [Slider Log](https://github.com/rwaldron/johnny-five/blob/master/docs/slider-log.md)\n- [Slider Pan](https://github.com/rwaldron/johnny-five/blob/master/docs/slider-pan.md)\n- [Slider Servo Control](https://github.com/rwaldron/johnny-five/blob/master/docs/slider-servo-control.md)\n- [Temperature Tmp36](https://github.com/rwaldron/johnny-five/blob/master/docs/temperature-tmp36.md)\n- [Temperature Lm35](https://github.com/rwaldron/johnny-five/blob/master/docs/temperature-lm35.md)\n- [Temperature Ds18b20](https://github.com/rwaldron/johnny-five/blob/master/docs/temperature-ds18b20.md)\n- [Temperature Mpu6050](https://github.com/rwaldron/johnny-five/blob/master/docs/temperature-mpu6050.md)\n\n### Plugin Template\n- [Plugin](https://github.com/rwaldron/johnny-five/blob/master/docs/plugin.md)\n\n### Grove IoT Kit (Seeed Studio)\n- [Grove Led](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-led.md)\n- [Grove Button](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-button.md)\n- [Grove Touch](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-touch.md)\n- [Grove Sensor](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-sensor.md)\n- [Grove Lcd Rgb](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-lcd-rgb.md)\n- [Grove Lcd Rgb Temperature Display](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-lcd-rgb-temperature-display.md)\n- [Grove Servo](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-servo.md)\n\n### TinkerKit\n- [Tinkerkit Accelerometer](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-accelerometer.md)\n- [Tinkerkit Blink](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-blink.md)\n- [Tinkerkit Button](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-button.md)\n- [Tinkerkit Continuous Servo](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-continuous-servo.md)\n- [Tinkerkit Combo](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-combo.md)\n- [Tinkerkit Gyroscope](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-gyroscope.md)\n- [Tinkerkit Joystick](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-joystick.md)\n- [Tinkerkit Linear Pot](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-linear-pot.md)\n- [Tinkerkit Rotary](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-rotary.md)\n- [Tinkerkit Thermistor](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-thermistor.md)\n- [Tinkerkit Tilt](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-tilt.md)\n- [Tinkerkit Touch](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-touch.md)\n\n### Wii\n- [Nunchuk](https://github.com/rwaldron/johnny-five/blob/master/docs/nunchuk.md)\n- [Classic Controller](https://github.com/rwaldron/johnny-five/blob/master/docs/classic-controller.md)\n\n<!--extract-end:examples-->\n\n\n## Contributing\nAll contributions must adhere to the [Idiomatic.js Style Guide](https://github.com/rwldrn/idiomatic.js),\nby maintaining the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/gruntjs/grunt).\n\n\n## License\nCopyright (c) 2012, 2013, 2014 Rick Waldron <waldron.rick@gmail.com>\nLicensed under the MIT license.\nCopyright (c) 2014, 2015 The Johnny-Five Contributors\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "johnny-five@0.8.40",
  "dist": {
    "shasum": "90761ccfe18082e96221a685cdd97c045a5359be"
  },
  "_from": "johnny-five@",
  "_resolved": "https://registry.npmjs.org/johnny-five/-/johnny-five-0.8.40.tgz"
}
