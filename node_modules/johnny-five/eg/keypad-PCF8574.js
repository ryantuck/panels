var five = require("../");
var board = new five.Board();

board.on("ready", function() {
  var keypad = new five.Keypad({
    controller: "PCF8574",
    keys: [
      ["1", "2", "3"],
      ["4", "5", "6"],
      ["7", "8", "9"],
      ["*", "0", "#"],
    ]
  });

  ["change", "press", "hold", "release"].forEach(function(event) {
    keypad.on(event, function(data) {
      console.log("Event: %s, Which: %s", event, data);
    });
  });
});


  // // PCF8574: {
  // //   initialize: {
  // //     value: function(opts) {

  // //       var state = priv.get(this);
  // //       var address = opts.address || 0x20;
  // //       var keys = flatKeys(opts);
  // //       var mapping = keys;
  // //       // Object.keys(this.COMMANDS.KEY_MAP).reduce(function(accum, index) {
  // //       //   accum[index] = this.COMMANDS.KEY_MAP[index];
  // //       //   return accum;
  // //       // }.bind(this), []);
  // //       var length = mapping.length;


  // //       this.io.i2cConfig();

  // //       state.length = length;
  // //       state.touches = touches(length);

  // //       this.io.i2cRead(address, 1, function(bytes) {
  // //         var key = this.toKey(bytes);

  // //         console.log(bytes);

  // //         return;

  // //         var mapped = null;
  // //         var alias = null;

  // //         for (var i = 0; i < length; i++) {
  // //           mapped = mapping[i];
  // //           // "mapped" is 1-9
  // //           // "keys" will be zero indexed
  // //           alias = keys[mapped - 1];

  // //           if (alias) {
  // //             mapped = alias;
  // //           }

  // //           if (key & (1 << i)) {
  // //             if (state.touches[i] === 0) {

  // //               state.timeout = Date.now() + opts.holdTime;
  // //               trigger.call(this, "down", mapped);

  // //             } else if (state.touches[i] === 1) {
  // //               if (state.timeout !== null && Date.now() > state.timeout) {
  // //                 state.timeout = Date.now() + opts.holdTime;
  // //                 trigger.call(this, "hold", mapped);
  // //               }
  // //             }

  // //             state.touches[i] = 1;
  // //           } else {
  // //             if (state.touches[i] === 1) {
  // //               state.timeout = null;
  // //               trigger.call(this, "up", mapped);
  // //             }

  // //             state.touches[i] = 0;
  // //           }
  // //           alias = null;
  // //         }
  // //       }.bind(this));
  // //     }
  // //   },
  // //   toKey: {
  // //     value: function(raw) {
  // //       if (raw.length !== 2) {
  // //         return null;
  // //       }
  // //       return int16(raw[1], raw[0]);
  // //     }
  // //   }

  // },
