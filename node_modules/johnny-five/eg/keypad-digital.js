var five = require("../lib/johnny-five.js");
var board = new five.Board();

board.on("ready", function() {







  // var bmp = Array.from({ length: 10 }, function() { return 0; });

  // var ROWS = 4;
  // var COLS = 3;
  // var rowPins = [ 5, 4, 3, 2 ];
  // var colPins = [ 8, 7, 6 ];

  // var keys = [
  //  ["1","2","3"],
  //  ["4","5","6"],
  //  ["7","8","9"],
  //  ["*","0","#"]
  // ];

  // var keymap = keys.reduce(function(a, b) {
  //   return a.concat(b);
  // }, []);

  // rowPins.forEach(function(rowPin) {
  //   this.pinMode(rowPin, this.io.MODES.INPUT);
  //   this.digitalWrite(rowPin, this.io.HIGH);
  // }, this);


  // colPins.forEach(function(colPin) {
  //   this.pinMode(colPin);


  // }, this);


  // var cols = [7, 5, 2];
  // var rows = [3, 5, 6, 7];
  // var state = [];


  // cols.forEach(function(col) {
  //   var pin = new five.Digital({
  //     pin: col,
  //     freq: 50
  //   });

  //   pin.on("change", function() {
  //     console.log(col, this.value);
  //   });

  // });
  // pins.forEach(function(pin) {
  //   var button = new five.Pin({
  //     pin: pin,
  //     as: 0x00
  //   });

  //   button.read(function() {
  //     console.log(pin, this.value);
  //   });

  // });


  // var pins = [2, 3, 4, 5, 6, 7, 8];
  // var state = [];

  // pins.forEach(function(pin) {
  //   var button = new five.Button(pin);

  //   button.on("press", function() {
  //     console.log(pin, this.value);
  //   });

  // });
  // Array.from({ length: 12 }, function(_, index) {



  // });


});

function bitRead(value, bit) {
  return (value >> bit) & 0x01;
}
function bitSet(value, bit) {
  return value |= (1 << bit);
}
function bitClear(value, bit) {
  return value &= ~(1 << bit);
}
function bitWrite(value, bit, bitvalue) {
  return bitvalue ? bitSet(value, bit) : bitClear(value, bit);
}

var bmp = Array.from({ length: 10 }, Number);

// Row 0, Col 0
bmp[0] = bitWrite(bmp[0], 0, 0);

// Row 0, Col 1
bmp[0] = bitWrite(bmp[0], 1, 1);

// Row 0, Col 2
bmp[0] = bitWrite(bmp[0], 2, 0);

// Rea
// console.log(bitRead(bmp));

// Read:
// Row 0, Col 0
console.log(bitRead(bmp[0], 0));

// Row 0, Col 1
console.log(bitRead(bmp[0], 1));

// Row 0, Col 2
console.log(bitRead(bmp[0], 2));


